{"version":3,"sources":["validator.js"],"names":["Validator","parameters","document","querySelectorAll","console","log","options","Object","assign","selector","errorMessage","error","elements","warn","i","length","addEventListener","touched","evt","validate","event"],"mappings":";;;;;;;;;;IAAMA,S;AAML,qBAAYC,UAAZ,EAAwB;AAAA;;AAAA;;AAAA,qCALd,IAKc;;AAAA,mCAJhB,EAIgB;;AAAA,qCAHd,KAGc;;AAAA,qCAFd,EAEc;;AAAA,mCADhBC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CACgB;;AAAA,wCAsDX,YAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,KAxDuB;;AACvBD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,UAA3B;AACA,SAAKK,OAAL,GAAeC,MAAM,CAACC,MAAP,CACd,EADc,EAEd;AACCC,MAAAA,QAAQ,EAAE,IADX;AAECC,MAAAA,YAAY,EAAE;AAFf,KAFc,EAMdT,UANc,CAAf;AAQA,QAAMQ,QAAQ,GAAG,KAAKH,OAAL,CAAaG,QAA9B;;AACA,QAAI,CAACA,QAAL,EAAe;AACdL,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EADc,CACiC;AAC/C;AACA;;AAEDP,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,QAAvC;AACA,QAAMG,QAAQ,GAAGV,QAAQ,CAACC,gBAAT,CAA0BM,QAA1B,CAAjB,CAjBuB,CAmBvB;AACA;;AACA,QAAI,CAACG,QAAL,EAAe;AACdR,MAAAA,OAAO,CAACS,IAAR,CACC,+CADD,EAECJ,QAFD;AAIA;AACA,KA3BsB,CA6BvB;AACA;AACA;AACA;;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzCF,MAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYE,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAC3C,QAAA,KAAI,CAACC,OAAL,GAAe,IAAf;AACA,OAFD;AAGAL,MAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYE,gBAAZ,CAA6B,MAA7B,EAAqC,UAACE,GAAD;AAAA,eAAS,KAAI,CAACC,QAAL,CAAcD,GAAd,CAAT;AAAA,OAArC;AACA;AACD;;;;6BAEQE,K,EAAO;AACfhB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA;;;mCAEce,K,EAAO;AACrBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;;;kCAEae,K,EAAO;AACpBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA","sourcesContent":["class Validator {\n\tisValid = true;\n\terror = '';\n\ttouched = false;\n\toptions = {};\n\tfield = document.querySelectorAll('input');\n\tconstructor(parameters) {\n\t\tconsole.log('Validator()', parameters);\n\t\tthis.options = Object.assign(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tselector: null,\n\t\t\t\terrorMessage: 'Invalid value',\n\t\t\t},\n\t\t\tparameters\n\t\t);\n\t\tconst selector = this.options.selector;\n\t\tif (!selector) {\n\t\t\tconsole.error('Must provide a selector key!'); // this is a soft error, like a slap on the wrist\n\t\t\t// throw new Error(\"Must provide a selector key!\") // this blows up the whole app\n\t\t}\n\n\t\tconsole.log('setting up listener for', selector);\n\t\tconst elements = document.querySelectorAll(selector);\n\n\t\t// two ways to handle this part\n\t\t// 1: my preferred way\n\t\tif (!elements) {\n\t\t\tconsole.warn(\n\t\t\t\t'No elements matching the selector were found!',\n\t\t\t\tselector\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// 2: but this is fine too, just a little clunkier\n\t\t// if (element) {\n\t\t//     // do the setup here\n\t\t// }\n\n\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\telements[i].addEventListener('focus', () => {\n\t\t\t\tthis.touched = true;\n\t\t\t});\n\t\t\telements[i].addEventListener('blur', (evt) => this.validate(evt));\n\t\t}\n\t}\n\n\tvalidate(event) {\n\t\tconsole.log('Validator.validate()');\n\t}\n\n\tvalidateBefore(event) {\n\t\tconsole.log('Validator.validateBefore()');\n\t}\n\n\tvalidateAfter(event) {\n\t\tconsole.log('Validator.validateAfter()');\n\t}\n\n\tshowErrors = () => {\n\t\tconsole.log('showing errors');\n\t};\n}\n"],"file":"validator.js"}